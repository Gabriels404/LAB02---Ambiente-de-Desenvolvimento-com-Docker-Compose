version: "3.9"

networks:
  minha_rede:
    driver: bridge

volumes:
  pgdata:
  pgadmindata:

services:
  # Banco de Dados
  postgres:
    image: postgres:alpine
    container_name: meu_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - minha_rede

  # Admin do Banco
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: meu_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - pgadmindata:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - minha_rede
    
  # Backend (NestJS)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    command: npm run start:dev
    ports:
      - "${BACKEND_PORT}:3000"
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - minha_rede

  # Frontend (React + Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: meu_frontend
    restart: always
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "${FRONTEND_PORT}:5173"
    env_file:
      - .env
    networks:
      - minha_rede

  # Proxy reverso Nginx
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: meu_nginx
    restart: always
    ports:
      - "8080:80"
    depends_on:
      - frontend
      - backend
    networks:
      - minha_rede
